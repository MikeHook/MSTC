@inherits umbraco.MacroEngines.DynamicNodeContext
@using umbraco.cms.businesslogic.Tags
@{
    int postsPerPage = 5;

    dynamic blogHome = Model.AncestorOrSelf(2);
    int pageNumber = 1;
    int.TryParse(umbraco.library.RequestQueryString("page"), out pageNumber);
    string filter = umbraco.library.RequestQueryString("filterby");
    var posts = string.IsNullOrEmpty(filter) ? Model.Descendants("BlogPost").OrderBy("PostDate descending").Take(postsPerPage)
                    : Model.Descendants("BlogPost").Where(string.Format("Tags.Contains(\"{0}\")", filter)).OrderBy("PostDate descending").Take(postsPerPage);

    int numberOfPosts = posts.Count();
}

@if (string.IsNullOrWhiteSpace(filter) == false) {
    <h2 class="page-title">Archive for @filter</h2>
}
@if (Model.NodeTypeAlias == "DateFolder") {
    <h2 class="page-title">Monthly archive for @Model.CreateDate.ToString("MMMM yyyy")</h2>
}
@if (Model.NodeTypeAlias == "Blog" && string.IsNullOrWhiteSpace(filter))
{
    <h2 class="page-title">@Model.Name</h2>
}

@if (numberOfPosts > postsPerPage)
{
    <div id="nav-above" class="navigation">
        @if (pageNumber * postsPerPage < numberOfPosts)
        {
            <div class="nav-previous">&#171; <a href="?page=@(pageNumber + 1)">Older posts</a></div>
        }
        @if (pageNumber > 1)
        {
            <div class="nav-next"><a href="?page=@(pageNumber - 1)">Newer posts</a> &#187;</div>
        }
    </div>
}

@foreach (var post in posts)
{
    <div class="blog-post blog-single-post">
        <div class="single-post-title">
            <h3>@post.Name</h3>
        </div>
        <div class="single-post-info">
            <i class="glyphicon glyphicon-time"></i>@post.PostDate.ToString("dd MMM yyyy"), @post.postAuthor
        </div>
                @if (@post.newsPhoto is int)
                {
                    <div class="single-post-image"><img src="@Library.MediaById(post.newsPhoto).Url" alt="@post.Name" /></div>
                }
        <div class="single-post-content">
            <div class="entry-content">
                @post.BodyText
            </div>
        </div>
        <div class="entry-meta">
            <span class="tag-links">
                @{ IEnumerable<Tag> tags = Tag.GetTags(@post.Id);}
                @foreach (var tag in tags) { <a href="@string.Format("{0}?filterby={1}", blogHome.Url, tag.TagCaption)">@tag.TagCaption</a> }
                @if (tags.Any() == false) {@Html.Raw("Not tagged")}
            </span>
        </div>
    </div>
}